{
  "pages": [
    {
      "title": "Welcome to Heimdal AI:OS",
      "tags": ["intro", "ai-os", "universe"],
      "content": "You are inside Heimdal AI:OS â€” a developer-first OS wrapper that runs on top of your host OS and gives AI coders a consistent, auditable, and extensible CLI universe. Launch any CLI (e.g., Claude, Gemini) via Heimdal and it runs inside this universe with passthrough to your OS. Sessions expose helpful env vars (HEIMDAL_*) and generate lightweight context files for tools and automations."
    },
    {
      "title": "Heimdal Wiki (RAG Manpages)",
      "tags": ["wiki", "rag", "manpages", "docs"],
      "content": "The Heimdal wiki is a Retrieval-Augmented (RAG) manpage system. Pages in wiki.json are indexed and can be searched at the terminal. Use heimdal aioswiki search <query> to retrieve relevant pages and heimdal aioswiki show <Title> to read them. Over time, Heimdal can feed these pages into tool context so AI CLIs start preloaded with project and platform knowledge. Store this file in the repo root for project-scoped docs, or in ~/.heimdall/wiki.json for global docs."
    },
    {
      "title": "Quick Commands",
      "tags": ["usage", "cli", "getting-started"],
      "content": "Shell: heimdal shell (prefix [hd] shows the universe).\nRun any app: heimdal <app> [args...] (alias for run <app>).\nAdd an app: heimdal app add claude --cmd claude.\nSearch wiki: heimdal aioswiki search claude.\nShow page: heimdal aioswiki show Welcome to Heimdal AI:OS."
    },
    {
      "title": "Contributing Wiki Pages",
      "tags": ["contribute", "docs", "structure"],
      "content": "wiki.json structure: {\"pages\":[{\"title\":string,\"tags\":[string],\"content\":string}...]}. Keep titles unique and concise, add descriptive tags, and write short factual content. For team/project docs, commit wiki.json to the repo. For personal/global notes, keep it under ~/.heimdall/wiki.json."
    },
    {
      "title": "Projects (SQLite) in Heimdal AI:OS",
      "tags": ["projects", "sqlite", "aios", "setup"],
      "content": "Project lifecycle in Heimdal AI:OS.\n\nCreate: 'heimdal project-init NAME'.\nResult: creates NAME.sqlite on the host; inside Heimdal the AI:OS root is /NAME/.\nOpen: 'heimdal NAME shell' or 'heimdal project-open NAME'.\nRun apps: 'heimdal NAME <app> [args...]' (opens the universe for NAME and runs the app).\n\nExample structure:\n- host: ./NAME.sqlite (source of truth)\n- inside Heimdal ([hd] session): /NAME/ as AI:OS root with files/, cache/, context/.\n\nNotes:\n- The DB is the truth; exported files are projections.\n- Next steps: flatfiles, folders, and line annotations (//, @@, :: ::) recorded in SQLite for RAG and history."
    },
    {
      "title": "Shell Configuration (AI:OS)",
      "tags": ["shell", "zsh", "bash", "rc", "config"],
      "content": "Heimdal reads shell configuration from shell.json (repo root) or ~/.heimdall/shell.json. Keys: shell (zsh|bash), rc_mode (project-only|project-then-os|os-then-project), project_rc_dir (supports {name} and ~), virtual_path (bool), prompt_template (use __VPATH__), entry_echo (message on entry).\n\nProject rc files are resolved under project_rc_dir: for zsh use .zshrc; for bash use bashrc. Example: ~/.heimdall/projects/NAME/rc/.zshrc or .../bashrc.\n\nrc_mode: project-only = only project rc; project-then-os = project rc then OS rc; os-then-project = OS rc then project rc.\n\nExample shell.json (pseudo): { 'shell': 'zsh', 'rc_mode': 'project-then-os', 'project_rc_dir': '~/.heimdall/projects/{name}/rc', 'virtual_path': true, 'prompt_template': '${USER}@${HOST} __VPATH__ $', 'entry_echo': 'zsh ai:os default' }. Use double quotes in real JSON."
    }
  ]
}
